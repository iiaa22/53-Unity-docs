### YamlMime:ManagedReference
items:
- uid: Global.BaseSingleton`1
  commentId: T:Global.BaseSingleton`1
  id: BaseSingleton`1
  parent: Global
  children:
  - Global.BaseSingleton`1.Instance
  langs:
  - csharp
  - vb
  name: BaseSingleton<T>
  nameWithType: BaseSingleton<T>
  fullName: BaseSingleton<T>
  type: Class
  source:
    remote:
      path: Assets/YoJiaFrameWork/Scripts/Base/BaseSingleton.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: BaseSingleton
    path: ../Assets/YoJiaFrameWork/Scripts/Base/BaseSingleton.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: 单例模式父类
  example: []
  syntax:
    content: 'public abstract class BaseSingleton<T> where T : new()'
    typeParameters:
    - id: T
    content.vb: Public MustInherit Class BaseSingleton(Of T As New)
  inheritance:
  - System.Object
  nameWithType.vb: BaseSingleton(Of T)
  fullName.vb: BaseSingleton(Of T)
  name.vb: BaseSingleton(Of T)
- uid: Global.BaseSingleton`1.Instance
  commentId: P:Global.BaseSingleton`1.Instance
  id: Instance
  parent: Global.BaseSingleton`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: BaseSingleton<T>.Instance
  fullName: BaseSingleton<T>.Instance
  type: Property
  source:
    remote:
      path: Assets/YoJiaFrameWork/Scripts/Base/BaseSingleton.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: Instance
    path: ../Assets/YoJiaFrameWork/Scripts/Base/BaseSingleton.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static T Instance { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Shared ReadOnly Property Instance As T
  overload: Global.BaseSingleton`1.Instance*
  nameWithType.vb: BaseSingleton(Of T).Instance
  fullName.vb: BaseSingleton(Of T).Instance
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.BaseSingleton`1.Instance*
  commentId: Overload:Global.BaseSingleton`1.Instance
  href: Global.BaseSingleton-1.html#BaseSingleton_1_Instance
  name: Instance
  nameWithType: BaseSingleton<T>.Instance
  fullName: BaseSingleton<T>.Instance
  nameWithType.vb: BaseSingleton(Of T).Instance
  fullName.vb: BaseSingleton(Of T).Instance
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
