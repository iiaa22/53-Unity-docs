### YamlMime:ManagedReference
items:
- uid: Global.SkillsConfigItem
  commentId: T:Global.SkillsConfigItem
  id: SkillsConfigItem
  parent: Global
  children:
  - Global.SkillsConfigItem.beforeDead
  - Global.SkillsConfigItem.bonusATK
  - Global.SkillsConfigItem.bonusATK_P
  - Global.SkillsConfigItem.bonusDEF
  - Global.SkillsConfigItem.bonusDEF_P
  - Global.SkillsConfigItem.bonusEDF
  - Global.SkillsConfigItem.bonusEDF_P
  - Global.SkillsConfigItem.bonusERS
  - Global.SkillsConfigItem.bonusRES
  - Global.SkillsConfigItem.bonusSPD
  - Global.SkillsConfigItem.bonusSPD_P
  - Global.SkillsConfigItem.disableAttack
  - Global.SkillsConfigItem.disableMove
  - Global.SkillsConfigItem.hideInMenu
  - Global.SkillsConfigItem.onAttacked
  - Global.SkillsConfigItem.onDamaged
  - Global.SkillsConfigItem.onForgotten
  - Global.SkillsConfigItem.onLearned
  - Global.SkillsConfigItem.onUsed
  langs:
  - csharp
  - vb
  name: SkillsConfigItem
  nameWithType: SkillsConfigItem
  fullName: SkillsConfigItem
  type: Class
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: SkillsConfigItem
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class SkillsConfigItem : BaseConfigItem
    content.vb: >-
      <Serializable>

      Public Class SkillsConfigItem Inherits BaseConfigItem
  inheritance:
  - System.Object
  - Global.BaseConfigItem
  inheritedMembers:
  - Global.BaseConfigItem.name
  - Global.BaseConfigItem.description
  - Global.BaseConfigItem.remark
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.SkillsConfigItem.disableAttack
  commentId: F:Global.SkillsConfigItem.disableAttack
  id: disableAttack
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: disableAttack
  nameWithType: SkillsConfigItem.disableAttack
  fullName: SkillsConfigItem.disableAttack
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: disableAttack
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("禁用攻击")]

      public bool disableAttack
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("禁用攻击")>

      Public disableAttack As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 禁用攻击
- uid: Global.SkillsConfigItem.disableMove
  commentId: F:Global.SkillsConfigItem.disableMove
  id: disableMove
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: disableMove
  nameWithType: SkillsConfigItem.disableMove
  fullName: SkillsConfigItem.disableMove
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: disableMove
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("禁用移动")]

      public bool disableMove
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("禁用移动")>

      Public disableMove As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 禁用移动
- uid: Global.SkillsConfigItem.bonusATK
  commentId: F:Global.SkillsConfigItem.bonusATK
  id: bonusATK
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusATK
  nameWithType: SkillsConfigItem.bonusATK
  fullName: SkillsConfigItem.bonusATK
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusATK
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("攻击力加成值")]

      public int bonusATK
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("攻击力加成值")>

      Public bonusATK As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 攻击力加成值
- uid: Global.SkillsConfigItem.bonusATK_P
  commentId: F:Global.SkillsConfigItem.bonusATK_P
  id: bonusATK_P
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusATK_P
  nameWithType: SkillsConfigItem.bonusATK_P
  fullName: SkillsConfigItem.bonusATK_P
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusATK_P
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("攻击力加成百分比（%）")]

      public int bonusATK_P
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("攻击力加成百分比（%）")>

      Public bonusATK_P As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 攻击力加成百分比（%）
- uid: Global.SkillsConfigItem.bonusDEF
  commentId: F:Global.SkillsConfigItem.bonusDEF
  id: bonusDEF
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusDEF
  nameWithType: SkillsConfigItem.bonusDEF
  fullName: SkillsConfigItem.bonusDEF
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusDEF
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("物理防御力加成值")]

      public int bonusDEF
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("物理防御力加成值")>

      Public bonusDEF As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 物理防御力加成值
- uid: Global.SkillsConfigItem.bonusDEF_P
  commentId: F:Global.SkillsConfigItem.bonusDEF_P
  id: bonusDEF_P
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusDEF_P
  nameWithType: SkillsConfigItem.bonusDEF_P
  fullName: SkillsConfigItem.bonusDEF_P
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusDEF_P
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("物理防御力加成百分比（%）")]

      public int bonusDEF_P
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("物理防御力加成百分比（%）")>

      Public bonusDEF_P As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 物理防御力加成百分比（%）
- uid: Global.SkillsConfigItem.bonusEDF
  commentId: F:Global.SkillsConfigItem.bonusEDF
  id: bonusEDF
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusEDF
  nameWithType: SkillsConfigItem.bonusEDF
  fullName: SkillsConfigItem.bonusEDF
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusEDF
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("能量防御力加成值")]

      public int bonusEDF
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("能量防御力加成值")>

      Public bonusEDF As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 能量防御力加成值
- uid: Global.SkillsConfigItem.bonusEDF_P
  commentId: F:Global.SkillsConfigItem.bonusEDF_P
  id: bonusEDF_P
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusEDF_P
  nameWithType: SkillsConfigItem.bonusEDF_P
  fullName: SkillsConfigItem.bonusEDF_P
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusEDF_P
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("能量防御力加成百分比（%）")]

      public int bonusEDF_P
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("能量防御力加成百分比（%）")>

      Public bonusEDF_P As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 能量防御力加成百分比（%）
- uid: Global.SkillsConfigItem.bonusSPD
  commentId: F:Global.SkillsConfigItem.bonusSPD
  id: bonusSPD
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusSPD
  nameWithType: SkillsConfigItem.bonusSPD
  fullName: SkillsConfigItem.bonusSPD
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusSPD
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("速度加成值")]

      public float bonusSPD
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("速度加成值")>

      Public bonusSPD As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 速度加成值
- uid: Global.SkillsConfigItem.bonusSPD_P
  commentId: F:Global.SkillsConfigItem.bonusSPD_P
  id: bonusSPD_P
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusSPD_P
  nameWithType: SkillsConfigItem.bonusSPD_P
  fullName: SkillsConfigItem.bonusSPD_P
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusSPD_P
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("速度加成百分比（%）")]

      public int bonusSPD_P
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("速度加成百分比（%）")>

      Public bonusSPD_P As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 速度加成百分比（%）
- uid: Global.SkillsConfigItem.bonusRES
  commentId: F:Global.SkillsConfigItem.bonusRES
  id: bonusRES
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusRES
  nameWithType: SkillsConfigItem.bonusRES
  fullName: SkillsConfigItem.bonusRES
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusRES
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("物理抗性加成值（%）")]

      public float bonusRES
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("物理抗性加成值（%）")>

      Public bonusRES As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 物理抗性加成值（%）
- uid: Global.SkillsConfigItem.bonusERS
  commentId: F:Global.SkillsConfigItem.bonusERS
  id: bonusERS
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: bonusERS
  nameWithType: SkillsConfigItem.bonusERS
  fullName: SkillsConfigItem.bonusERS
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: bonusERS
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("能量抗性加成值（%）")]

      public float bonusERS
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("能量抗性加成值（%）")>

      Public bonusERS As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 能量抗性加成值（%）
- uid: Global.SkillsConfigItem.hideInMenu
  commentId: F:Global.SkillsConfigItem.hideInMenu
  id: hideInMenu
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: hideInMenu
  nameWithType: SkillsConfigItem.hideInMenu
  fullName: SkillsConfigItem.hideInMenu
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: hideInMenu
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("是否在菜单中隐藏")]

      public bool hideInMenu
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("是否在菜单中隐藏")>

      Public hideInMenu As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 是否在菜单中隐藏
- uid: Global.SkillsConfigItem.onLearned
  commentId: F:Global.SkillsConfigItem.onLearned
  id: onLearned
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: onLearned
  nameWithType: SkillsConfigItem.onLearned
  fullName: SkillsConfigItem.onLearned
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: onLearned
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("技能习得事件\n参数1：习得的单位\n参数2：习得的技能")]

      public UnityEvent<Unit, Skill> onLearned
    return:
      type: UnityEngine.Events.UnityEvent{Unit,Skill}
    content.vb: >-
      <Tooltip("技能习得事件" & vbLf & "参数1：习得的单位" & vbLf & "参数2：习得的技能")>

      Public onLearned As UnityEvent(Of Unit, Skill)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        技能习得事件

        参数1：习得的单位

        参数2：习得的技能
- uid: Global.SkillsConfigItem.onForgotten
  commentId: F:Global.SkillsConfigItem.onForgotten
  id: onForgotten
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: onForgotten
  nameWithType: SkillsConfigItem.onForgotten
  fullName: SkillsConfigItem.onForgotten
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: onForgotten
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("技能遗忘事件\n参数1：遗忘的单位\n参数2：遗忘的技能")]

      public UnityEvent<Unit, Skill> onForgotten
    return:
      type: UnityEngine.Events.UnityEvent{Unit,Skill}
    content.vb: >-
      <Tooltip("技能遗忘事件" & vbLf & "参数1：遗忘的单位" & vbLf & "参数2：遗忘的技能")>

      Public onForgotten As UnityEvent(Of Unit, Skill)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        技能遗忘事件

        参数1：遗忘的单位

        参数2：遗忘的技能
- uid: Global.SkillsConfigItem.onUsed
  commentId: F:Global.SkillsConfigItem.onUsed
  id: onUsed
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: onUsed
  nameWithType: SkillsConfigItem.onUsed
  fullName: SkillsConfigItem.onUsed
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: onUsed
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("技能使用事件\n参数1：使用的单位\n参数2：使用的技能")]

      public UnityEvent<Unit, Skill> onUsed
    return:
      type: UnityEngine.Events.UnityEvent{Unit,Skill}
    content.vb: >-
      <Tooltip("技能使用事件" & vbLf & "参数1：使用的单位" & vbLf & "参数2：使用的技能")>

      Public onUsed As UnityEvent(Of Unit, Skill)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        技能使用事件

        参数1：使用的单位

        参数2：使用的技能
- uid: Global.SkillsConfigItem.onAttacked
  commentId: F:Global.SkillsConfigItem.onAttacked
  id: onAttacked
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: onAttacked
  nameWithType: SkillsConfigItem.onAttacked
  fullName: SkillsConfigItem.onAttacked
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: onAttacked
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 47
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("受到攻击事件\n参数1：攻击者\n参数2：受击者\n参数3：触发的技能\n参数4：伤害信息")]

      public UnityEvent<Unit, Unit, Skill, DamageInfo> onAttacked
    return:
      type: UnityEngine.Events.UnityEvent{Unit,Unit,Skill,DamageInfo}
    content.vb: >-
      <Tooltip("受到攻击事件" & vbLf & "参数1：攻击者" & vbLf & "参数2：受击者" & vbLf & "参数3：触发的技能" & vbLf & "参数4：伤害信息")>

      Public onAttacked As UnityEvent(Of Unit, Unit, Skill, DamageInfo)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        受到攻击事件

        参数1：攻击者

        参数2：受击者

        参数3：触发的技能

        参数4：伤害信息
- uid: Global.SkillsConfigItem.onDamaged
  commentId: F:Global.SkillsConfigItem.onDamaged
  id: onDamaged
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: onDamaged
  nameWithType: SkillsConfigItem.onDamaged
  fullName: SkillsConfigItem.onDamaged
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: onDamaged
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 49
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("受到伤害事件\n参数1：攻击者\n参数2：受击者\n参数3：触发的技能\n参数4：伤害信息")]

      public UnityEvent<Unit, Unit, Skill, DamageInfo> onDamaged
    return:
      type: UnityEngine.Events.UnityEvent{Unit,Unit,Skill,DamageInfo}
    content.vb: >-
      <Tooltip("受到伤害事件" & vbLf & "参数1：攻击者" & vbLf & "参数2：受击者" & vbLf & "参数3：触发的技能" & vbLf & "参数4：伤害信息")>

      Public onDamaged As UnityEvent(Of Unit, Unit, Skill, DamageInfo)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        受到伤害事件

        参数1：攻击者

        参数2：受击者

        参数3：触发的技能

        参数4：伤害信息
- uid: Global.SkillsConfigItem.beforeDead
  commentId: F:Global.SkillsConfigItem.beforeDead
  id: beforeDead
  parent: Global.SkillsConfigItem
  langs:
  - csharp
  - vb
  name: beforeDead
  nameWithType: SkillsConfigItem.beforeDead
  fullName: SkillsConfigItem.beforeDead
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/SkillsConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: beforeDead
    path: ../Assets/Scripts/Configs/SkillsConfig.cs
    startLine: 51
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("死亡前事件\n参数1：攻击者\n参数2：受击者\n参数3：触发的技能\n参数4：伤害信息")]

      public UnityEvent<Unit, Unit, Skill, DamageInfo> beforeDead
    return:
      type: UnityEngine.Events.UnityEvent{Unit,Unit,Skill,DamageInfo}
    content.vb: >-
      <Tooltip("死亡前事件" & vbLf & "参数1：攻击者" & vbLf & "参数2：受击者" & vbLf & "参数3：触发的技能" & vbLf & "参数4：伤害信息")>

      Public beforeDead As UnityEvent(Of Unit, Unit, Skill, DamageInfo)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        死亡前事件

        参数1：攻击者

        参数2：受击者

        参数3：触发的技能

        参数4：伤害信息
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.BaseConfigItem
  commentId: T:Global.BaseConfigItem
  href: BaseConfigItem.html
  name: BaseConfigItem
  nameWithType: BaseConfigItem
  fullName: BaseConfigItem
- uid: Global.BaseConfigItem.name
  commentId: F:Global.BaseConfigItem.name
  parent: Global.BaseConfigItem
  href: Global.BaseConfigItem.html#BaseConfigItem_name
  name: name
  nameWithType: BaseConfigItem.name
  fullName: BaseConfigItem.name
- uid: Global.BaseConfigItem.description
  commentId: F:Global.BaseConfigItem.description
  parent: Global.BaseConfigItem
  href: Global.BaseConfigItem.html#BaseConfigItem_description
  name: description
  nameWithType: BaseConfigItem.description
  fullName: BaseConfigItem.description
- uid: Global.BaseConfigItem.remark
  commentId: F:Global.BaseConfigItem.remark
  parent: Global.BaseConfigItem
  href: Global.BaseConfigItem.html#BaseConfigItem_remark
  name: remark
  nameWithType: BaseConfigItem.remark
  fullName: BaseConfigItem.remark
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Events.UnityEvent{Unit,Skill}
  commentId: T:UnityEngine.Events.UnityEvent{Unit,Skill}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`2
  href: Unit.html
  name: UnityEvent<Unit, Skill>
  nameWithType: UnityEvent<Unit, Skill>
  fullName: UnityEngine.Events.UnityEvent<Unit, Skill>
  nameWithType.vb: UnityEvent(Of Unit, Skill)
  fullName.vb: UnityEngine.Events.UnityEvent(Of Unit, Skill)
  name.vb: UnityEvent(Of Unit, Skill)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: Global.Unit
    name: Unit
    href: Unit.html
  - name: ','
  - name: " "
  - uid: Global.Skill
    name: Skill
    href: Skill.html
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Unit
    name: Unit
    href: Unit.html
  - name: ','
  - name: " "
  - uid: Global.Skill
    name: Skill
    href: Skill.html
  - name: )
- uid: UnityEngine.Events.UnityEvent`2
  commentId: T:UnityEngine.Events.UnityEvent`2
  isExternal: true
  name: UnityEvent<T0, T1>
  nameWithType: UnityEvent<T0, T1>
  fullName: UnityEngine.Events.UnityEvent<T0, T1>
  nameWithType.vb: UnityEvent(Of T0, T1)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0, T1)
  name.vb: UnityEvent(Of T0, T1)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
- uid: UnityEngine.Events.UnityEvent{Unit,Unit,Skill,DamageInfo}
  commentId: T:UnityEngine.Events.UnityEvent{Unit,Unit,Skill,DamageInfo}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`4
  href: Unit.html
  name: UnityEvent<Unit, Unit, Skill, DamageInfo>
  nameWithType: UnityEvent<Unit, Unit, Skill, DamageInfo>
  fullName: UnityEngine.Events.UnityEvent<Unit, Unit, Skill, DamageInfo>
  nameWithType.vb: UnityEvent(Of Unit, Unit, Skill, DamageInfo)
  fullName.vb: UnityEngine.Events.UnityEvent(Of Unit, Unit, Skill, DamageInfo)
  name.vb: UnityEvent(Of Unit, Unit, Skill, DamageInfo)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`4
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: Global.Unit
    name: Unit
    href: Unit.html
  - name: ','
  - name: " "
  - uid: Global.Unit
    name: Unit
    href: Unit.html
  - name: ','
  - name: " "
  - uid: Global.Skill
    name: Skill
    href: Skill.html
  - name: ','
  - name: " "
  - uid: Global.DamageInfo
    name: DamageInfo
    href: DamageInfo.html
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`4
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Unit
    name: Unit
    href: Unit.html
  - name: ','
  - name: " "
  - uid: Global.Unit
    name: Unit
    href: Unit.html
  - name: ','
  - name: " "
  - uid: Global.Skill
    name: Skill
    href: Skill.html
  - name: ','
  - name: " "
  - uid: Global.DamageInfo
    name: DamageInfo
    href: DamageInfo.html
  - name: )
- uid: UnityEngine.Events.UnityEvent`4
  commentId: T:UnityEngine.Events.UnityEvent`4
  isExternal: true
  name: UnityEvent<T0, T1, T2, T3>
  nameWithType: UnityEvent<T0, T1, T2, T3>
  fullName: UnityEngine.Events.UnityEvent<T0, T1, T2, T3>
  nameWithType.vb: UnityEvent(Of T0, T1, T2, T3)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0, T1, T2, T3)
  name.vb: UnityEvent(Of T0, T1, T2, T3)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`4
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`4
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
