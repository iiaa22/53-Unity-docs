### YamlMime:ManagedReference
items:
- uid: Global.ConfigManager
  commentId: T:Global.ConfigManager
  id: ConfigManager
  parent: Global
  children:
  - Global.ConfigManager.GetConfigDataByID``1(System.Int32)
  - Global.ConfigManager.GetConfigDataByName``1(System.String)
  - Global.ConfigManager.GetConfigDataLength``1
  - Global.ConfigManager.Load
  langs:
  - csharp
  - vb
  name: ConfigManager
  nameWithType: ConfigManager
  fullName: ConfigManager
  type: Class
  source:
    remote:
      path: Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: ConfigManager
    path: ../Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: 配置管理器
  example: []
  syntax:
    content: public class ConfigManager
    content.vb: Public Class ConfigManager
  inheritance:
  - System.Object
- uid: Global.ConfigManager.Load
  commentId: M:Global.ConfigManager.Load
  id: Load
  parent: Global.ConfigManager
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: ConfigManager.Load()
  fullName: ConfigManager.Load()
  type: Method
  source:
    remote:
      path: Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: Load
    path: ../Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: 加载配置。
  example: []
  syntax:
    content: public static void Load()
    content.vb: Public Shared Sub Load()
  overload: Global.ConfigManager.Load*
- uid: Global.ConfigManager.GetConfigDataByID``1(System.Int32)
  commentId: M:Global.ConfigManager.GetConfigDataByID``1(System.Int32)
  id: GetConfigDataByID``1(System.Int32)
  parent: Global.ConfigManager
  langs:
  - csharp
  - vb
  name: GetConfigDataByID<T>(int)
  nameWithType: ConfigManager.GetConfigDataByID<T>(int)
  fullName: ConfigManager.GetConfigDataByID<T>(int)
  type: Method
  source:
    remote:
      path: Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: GetConfigDataByID
    path: ../Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: 获得配置数据。
  example: []
  syntax:
    content: 'public static T GetConfigDataByID<T>(int id) where T : BaseConfigItem'
    parameters:
    - id: id
      type: System.Int32
      description: 数据ID
    typeParameters:
    - id: T
      description: 配置数据类型
    return:
      type: '{T}'
      description: 配置数据
    content.vb: Public Shared Function GetConfigDataByID(Of T As BaseConfigItem)(id As Integer) As T
  overload: Global.ConfigManager.GetConfigDataByID*
  nameWithType.vb: ConfigManager.GetConfigDataByID(Of T)(Integer)
  fullName.vb: ConfigManager.GetConfigDataByID(Of T)(Integer)
  name.vb: GetConfigDataByID(Of T)(Integer)
- uid: Global.ConfigManager.GetConfigDataByName``1(System.String)
  commentId: M:Global.ConfigManager.GetConfigDataByName``1(System.String)
  id: GetConfigDataByName``1(System.String)
  parent: Global.ConfigManager
  langs:
  - csharp
  - vb
  name: GetConfigDataByName<T>(string)
  nameWithType: ConfigManager.GetConfigDataByName<T>(string)
  fullName: ConfigManager.GetConfigDataByName<T>(string)
  type: Method
  source:
    remote:
      path: Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: GetConfigDataByName
    path: ../Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
    startLine: 47
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: 获得配置数据。
  example: []
  syntax:
    content: 'public static T GetConfigDataByName<T>(string name) where T : BaseConfigItem'
    parameters:
    - id: name
      type: System.String
      description: 数据名
    typeParameters:
    - id: T
      description: 配置数据类型
    return:
      type: '{T}'
      description: 配置数据
    content.vb: Public Shared Function GetConfigDataByName(Of T As BaseConfigItem)(name As String) As T
  overload: Global.ConfigManager.GetConfigDataByName*
  nameWithType.vb: ConfigManager.GetConfigDataByName(Of T)(String)
  fullName.vb: ConfigManager.GetConfigDataByName(Of T)(String)
  name.vb: GetConfigDataByName(Of T)(String)
- uid: Global.ConfigManager.GetConfigDataLength``1
  commentId: M:Global.ConfigManager.GetConfigDataLength``1
  id: GetConfigDataLength``1
  parent: Global.ConfigManager
  langs:
  - csharp
  - vb
  name: GetConfigDataLength<T>()
  nameWithType: ConfigManager.GetConfigDataLength<T>()
  fullName: ConfigManager.GetConfigDataLength<T>()
  type: Method
  source:
    remote:
      path: Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: GetConfigDataLength
    path: ../Assets/YoJiaFrameWork/Scripts/Manager/ConfigManager.cs
    startLine: 66
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: 获得配置表长度。
  example: []
  syntax:
    content: 'public static int GetConfigDataLength<T>() where T : BaseConfigItem'
    typeParameters:
    - id: T
      description: 配置数据类型
    return:
      type: System.Int32
      description: 配置表长度
    content.vb: Public Shared Function GetConfigDataLength(Of T As BaseConfigItem)() As Integer
  overload: Global.ConfigManager.GetConfigDataLength*
  nameWithType.vb: ConfigManager.GetConfigDataLength(Of T)()
  fullName.vb: ConfigManager.GetConfigDataLength(Of T)()
  name.vb: GetConfigDataLength(Of T)()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ConfigManager.Load*
  commentId: Overload:Global.ConfigManager.Load
  href: Global.ConfigManager.html#ConfigManager_Load
  name: Load
  nameWithType: ConfigManager.Load
  fullName: ConfigManager.Load
- uid: Global.ConfigManager.GetConfigDataByID*
  commentId: Overload:Global.ConfigManager.GetConfigDataByID
  href: Global.ConfigManager.html#ConfigManager_GetConfigDataByID__1_System_Int32_
  name: GetConfigDataByID
  nameWithType: ConfigManager.GetConfigDataByID
  fullName: ConfigManager.GetConfigDataByID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.ConfigManager.GetConfigDataByName*
  commentId: Overload:Global.ConfigManager.GetConfigDataByName
  href: Global.ConfigManager.html#ConfigManager_GetConfigDataByName__1_System_String_
  name: GetConfigDataByName
  nameWithType: ConfigManager.GetConfigDataByName
  fullName: ConfigManager.GetConfigDataByName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.ConfigManager.GetConfigDataLength*
  commentId: Overload:Global.ConfigManager.GetConfigDataLength
  href: Global.ConfigManager.html#ConfigManager_GetConfigDataLength__1
  name: GetConfigDataLength
  nameWithType: ConfigManager.GetConfigDataLength
  fullName: ConfigManager.GetConfigDataLength
