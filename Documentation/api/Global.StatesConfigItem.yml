### YamlMime:ManagedReference
items:
- uid: Global.StatesConfigItem
  commentId: T:Global.StatesConfigItem
  id: StatesConfigItem
  parent: Global
  children:
  - Global.StatesConfigItem.defaultDuration
  - Global.StatesConfigItem.defaultEnergyShield
  - Global.StatesConfigItem.defaultPhysicalShield
  - Global.StatesConfigItem.defaultUniversalShield
  - Global.StatesConfigItem.hideInMenu
  - Global.StatesConfigItem.onGained
  - Global.StatesConfigItem.onLost
  - Global.StatesConfigItem.onUpdate
  langs:
  - csharp
  - vb
  name: StatesConfigItem
  nameWithType: StatesConfigItem
  fullName: StatesConfigItem
  type: Class
  source:
    remote:
      path: Assets/Scripts/Configs/StatesConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: StatesConfigItem
    path: ../Assets/Scripts/Configs/StatesConfig.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class StatesConfigItem : BaseConfigItem
    content.vb: >-
      <Serializable>

      Public Class StatesConfigItem Inherits BaseConfigItem
  inheritance:
  - System.Object
  - Global.BaseConfigItem
  inheritedMembers:
  - Global.BaseConfigItem.name
  - Global.BaseConfigItem.description
  - Global.BaseConfigItem.remark
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.StatesConfigItem.defaultDuration
  commentId: F:Global.StatesConfigItem.defaultDuration
  id: defaultDuration
  parent: Global.StatesConfigItem
  langs:
  - csharp
  - vb
  name: defaultDuration
  nameWithType: StatesConfigItem.defaultDuration
  fullName: StatesConfigItem.defaultDuration
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/StatesConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: defaultDuration
    path: ../Assets/Scripts/Configs/StatesConfig.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Min(0)]

      [Tooltip("默认持续时间（秒）（0代表无限时间）")]

      public float defaultDuration
    return:
      type: System.Single
    content.vb: >-
      <Min(0)>

      <Tooltip("默认持续时间（秒）（0代表无限时间）")>

      Public defaultDuration As Single
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 默认持续时间（秒）（0代表无限时间）
- uid: Global.StatesConfigItem.defaultPhysicalShield
  commentId: F:Global.StatesConfigItem.defaultPhysicalShield
  id: defaultPhysicalShield
  parent: Global.StatesConfigItem
  langs:
  - csharp
  - vb
  name: defaultPhysicalShield
  nameWithType: StatesConfigItem.defaultPhysicalShield
  fullName: StatesConfigItem.defaultPhysicalShield
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/StatesConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: defaultPhysicalShield
    path: ../Assets/Scripts/Configs/StatesConfig.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Min(0)]

      [Tooltip("默认物理护盾")]

      public int defaultPhysicalShield
    return:
      type: System.Int32
    content.vb: >-
      <Min(0)>

      <Tooltip("默认物理护盾")>

      Public defaultPhysicalShield As Integer
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 默认物理护盾
- uid: Global.StatesConfigItem.defaultEnergyShield
  commentId: F:Global.StatesConfigItem.defaultEnergyShield
  id: defaultEnergyShield
  parent: Global.StatesConfigItem
  langs:
  - csharp
  - vb
  name: defaultEnergyShield
  nameWithType: StatesConfigItem.defaultEnergyShield
  fullName: StatesConfigItem.defaultEnergyShield
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/StatesConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: defaultEnergyShield
    path: ../Assets/Scripts/Configs/StatesConfig.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Min(0)]

      [Tooltip("默认能量护盾")]

      public int defaultEnergyShield
    return:
      type: System.Int32
    content.vb: >-
      <Min(0)>

      <Tooltip("默认能量护盾")>

      Public defaultEnergyShield As Integer
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 默认能量护盾
- uid: Global.StatesConfigItem.defaultUniversalShield
  commentId: F:Global.StatesConfigItem.defaultUniversalShield
  id: defaultUniversalShield
  parent: Global.StatesConfigItem
  langs:
  - csharp
  - vb
  name: defaultUniversalShield
  nameWithType: StatesConfigItem.defaultUniversalShield
  fullName: StatesConfigItem.defaultUniversalShield
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/StatesConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: defaultUniversalShield
    path: ../Assets/Scripts/Configs/StatesConfig.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Min(0)]

      [Tooltip("默认全能护盾")]

      public int defaultUniversalShield
    return:
      type: System.Int32
    content.vb: >-
      <Min(0)>

      <Tooltip("默认全能护盾")>

      Public defaultUniversalShield As Integer
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 默认全能护盾
- uid: Global.StatesConfigItem.hideInMenu
  commentId: F:Global.StatesConfigItem.hideInMenu
  id: hideInMenu
  parent: Global.StatesConfigItem
  langs:
  - csharp
  - vb
  name: hideInMenu
  nameWithType: StatesConfigItem.hideInMenu
  fullName: StatesConfigItem.hideInMenu
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/StatesConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: hideInMenu
    path: ../Assets/Scripts/Configs/StatesConfig.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("是否在菜单中隐藏")]

      public bool hideInMenu
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("是否在菜单中隐藏")>

      Public hideInMenu As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 是否在菜单中隐藏
- uid: Global.StatesConfigItem.onGained
  commentId: F:Global.StatesConfigItem.onGained
  id: onGained
  parent: Global.StatesConfigItem
  langs:
  - csharp
  - vb
  name: onGained
  nameWithType: StatesConfigItem.onGained
  fullName: StatesConfigItem.onGained
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/StatesConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: onGained
    path: ../Assets/Scripts/Configs/StatesConfig.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("状态获得事件\n参数1：获得的单位\n参数2：获得的状态")]

      public UnityEvent<Unit, State> onGained
    return:
      type: UnityEngine.Events.UnityEvent{Unit,State}
    content.vb: >-
      <Tooltip("状态获得事件" & vbLf & "参数1：获得的单位" & vbLf & "参数2：获得的状态")>

      Public onGained As UnityEvent(Of Unit, State)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        状态获得事件

        参数1：获得的单位

        参数2：获得的状态
- uid: Global.StatesConfigItem.onUpdate
  commentId: F:Global.StatesConfigItem.onUpdate
  id: onUpdate
  parent: Global.StatesConfigItem
  langs:
  - csharp
  - vb
  name: onUpdate
  nameWithType: StatesConfigItem.onUpdate
  fullName: StatesConfigItem.onUpdate
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/StatesConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: onUpdate
    path: ../Assets/Scripts/Configs/StatesConfig.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("状态持续事件，此事件会在状态维持期间每帧调用一次\n参数1：持续的单位\n参数2：持续的状态")]

      public UnityEvent<Unit, State> onUpdate
    return:
      type: UnityEngine.Events.UnityEvent{Unit,State}
    content.vb: >-
      <Tooltip("状态持续事件，此事件会在状态维持期间每帧调用一次" & vbLf & "参数1：持续的单位" & vbLf & "参数2：持续的状态")>

      Public onUpdate As UnityEvent(Of Unit, State)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        状态持续事件，此事件会在状态维持期间每帧调用一次

        参数1：持续的单位

        参数2：持续的状态
- uid: Global.StatesConfigItem.onLost
  commentId: F:Global.StatesConfigItem.onLost
  id: onLost
  parent: Global.StatesConfigItem
  langs:
  - csharp
  - vb
  name: onLost
  nameWithType: StatesConfigItem.onLost
  fullName: StatesConfigItem.onLost
  type: Field
  source:
    remote:
      path: Assets/Scripts/Configs/StatesConfig.cs
      branch: master
      repo: https://github.com/iiaa22/53-Unity.git
    id: onLost
    path: ../Assets/Scripts/Configs/StatesConfig.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("状态失去事件\n参数1：失去的单位\n参数2：失去的状态")]

      public UnityEvent<Unit, State> onLost
    return:
      type: UnityEngine.Events.UnityEvent{Unit,State}
    content.vb: >-
      <Tooltip("状态失去事件" & vbLf & "参数1：失去的单位" & vbLf & "参数2：失去的状态")>

      Public onLost As UnityEvent(Of Unit, State)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        状态失去事件

        参数1：失去的单位

        参数2：失去的状态
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.BaseConfigItem
  commentId: T:Global.BaseConfigItem
  href: BaseConfigItem.html
  name: BaseConfigItem
  nameWithType: BaseConfigItem
  fullName: BaseConfigItem
- uid: Global.BaseConfigItem.name
  commentId: F:Global.BaseConfigItem.name
  parent: Global.BaseConfigItem
  href: Global.BaseConfigItem.html#BaseConfigItem_name
  name: name
  nameWithType: BaseConfigItem.name
  fullName: BaseConfigItem.name
- uid: Global.BaseConfigItem.description
  commentId: F:Global.BaseConfigItem.description
  parent: Global.BaseConfigItem
  href: Global.BaseConfigItem.html#BaseConfigItem_description
  name: description
  nameWithType: BaseConfigItem.description
  fullName: BaseConfigItem.description
- uid: Global.BaseConfigItem.remark
  commentId: F:Global.BaseConfigItem.remark
  parent: Global.BaseConfigItem
  href: Global.BaseConfigItem.html#BaseConfigItem_remark
  name: remark
  nameWithType: BaseConfigItem.remark
  fullName: BaseConfigItem.remark
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Events.UnityEvent{Unit,State}
  commentId: T:UnityEngine.Events.UnityEvent{Unit,State}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`2
  href: Unit.html
  name: UnityEvent<Unit, State>
  nameWithType: UnityEvent<Unit, State>
  fullName: UnityEngine.Events.UnityEvent<Unit, State>
  nameWithType.vb: UnityEvent(Of Unit, State)
  fullName.vb: UnityEngine.Events.UnityEvent(Of Unit, State)
  name.vb: UnityEvent(Of Unit, State)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: Global.Unit
    name: Unit
    href: Unit.html
  - name: ','
  - name: " "
  - uid: Global.State
    name: State
    href: State.html
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Unit
    name: Unit
    href: Unit.html
  - name: ','
  - name: " "
  - uid: Global.State
    name: State
    href: State.html
  - name: )
- uid: UnityEngine.Events.UnityEvent`2
  commentId: T:UnityEngine.Events.UnityEvent`2
  isExternal: true
  name: UnityEvent<T0, T1>
  nameWithType: UnityEvent<T0, T1>
  fullName: UnityEngine.Events.UnityEvent<T0, T1>
  nameWithType.vb: UnityEvent(Of T0, T1)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0, T1)
  name.vb: UnityEvent(Of T0, T1)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
